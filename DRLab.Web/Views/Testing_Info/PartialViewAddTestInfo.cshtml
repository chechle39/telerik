@(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
    })
)
@model string
<kendo-dialog name="@Model" title="New Testing" width="500" modal="true" visible="false">
    <content>
        <form asp-controller="Testing_Info" asp-action="TestingInfo_CreatePopup" id="createTesting_InfoForm" method="post">
            <div class="row mb-2">
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .Name("analysisCode")
                    .HtmlAttributes(new { placeholder = "AnalysisCode",style = "width: 100%;display:none" }))
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-3">
                    <span style="vertical-align: sub;">Specification</span>
                </div>
                <div class="col-8">
                    @(Html.Kendo().ComboBox()
                                .Name("specification")
                                .Placeholder("Select specification")
                                .DataTextField("specification")
                                .DataValueField("specification")
                                .HtmlAttributes(new { style = "width: 100%;margin-top: -4px;" })
                                .Events(e =>
                                {
                                    e.Change("onChangSpec").Select("onSelectSpec");
                                })
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetspecificationItem", "Testing_Info");
                                    }).ServerFiltering(true);
                                })
                                .Filter("startswith")
                                .Height(300)
                                .HeaderTemplate("<div class=\"dropdown-header k-widget k-header\">" +
                                    "<span>Specification</span>" +
                                        "</div>")
                                .Template(
                                "<span class=\"k-state-default\"><h6>#: data.specification #</h6></span>")
                            )

                </div>
                <div class="col-1" style="margin-top: -7px;margin-left: -4px">
                    <span style="margin-top: -2px;">
                        @(Html.Kendo().Button()
                        .Name("AddSpecBtn")
                        .HtmlAttributes(new { @class = "hide-on-narrow" })
                        .Icon("plus")
                        .Events(ev => ev.Click("openCreateSpec"))
                        )
                        <script>

                        </script>
                    </span>
                </div>
            </div>
            <div class="row mb-2" id="NewSpec" style="display: none">
                <div class="col-3">
                    <span style="vertical-align: sub;">New Specification</span>
                </div>
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Create new a Specification", style = "width: 100%" })
                    .Name("newspecification")
                    )
                </div>
            </div>
            <div class="row mb-2" id="NewSpecCode" style="display: none">
                <div class="col-3">
                    <span style="vertical-align: sub;">Specification Code</span>
                </div>
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Create new a Specification Code", style = "width: 100%" })
                    .Name("newspecificationcode")
                    )
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-3">
                    <span style="vertical-align: sub;">Method</span>
                </div>
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Method", style = "width: 100%" })
                    .Name("method")
                    )
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-3">
                    <span style="vertical-align: sub;">Unit</span>
                </div>
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Unit", style = "width: 100%" })
                    .Name("unit")
                    )
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-3">
                    <span style="vertical-align: sub;">Turn Around Time</span>
                </div>
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Turn Around Time", style = "width: 100%" })
                    .Name("turnAroundTime")
                    )
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-12">
                    <span style="vertical-align: sub;">Reform Test Result</span>
                    @(Html.Kendo().CheckBox().Name("reformTestResult").HtmlAttributes(new { style = "margin-left: 1em" }).Checked(false))
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-3">
                    <span style="vertical-align: sub;">Note</span>
                </div>
                <div class="col-9">
                    @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Note", style = "width: 100%" })
                    .Name("note")
                    )
                </div>
            </div>
        </form>
    </content>
    <actions>
        <action text="Cancel">
        </action>
        <action text="Save" title="Save" action="onSavetesting" primary="true">
        </action>
    </actions>
    <popup-animation>
        <open duration="500" effects="fade:in" />
        <close duration="500" effects="fade:out" />
    </popup-animation>
</kendo-dialog>
<script>
    function onSavetesting() {
        var analysisCode = $('#analysisCode').val();
        var specification = $('#specification').val();
        var newspecification = $('#newspecification').val();
        var newspecificationcode = $('#newspecificationcode').val();
        var method = $('#method').val();
        var unit = $('#unit').val();
        var turnAroundTime = $('#turnAroundTime').val();
        var reformTestResult = $('#reformTestResult').is(":checked")
        var note = $('#note').val();
        const requestUrl = "/Testing_Info/TestingInfo_CreatePopup";
        if (specification == "" && newspecification == "") {
              var notification = $("#notification").data("kendoNotification");
            notification.show({
                title: "Choose a specification or new specification",
                message: "Insert error"
            }, "error");
            return;
        }
        const data = {
            analysisCode: analysisCode,
            specification: specification,
            newspecification: newspecification,
            specCode: newspecificationcode,
            method: method,
            unit: unit,
            turnAroundTime: turnAroundTime,
            reformTestResult: reformTestResult,
            note: note,
        };      
            $.post({
                url: requestUrl,
                data: data,
                dataType: 'json',
                success: function (result) {
                    $('#analysisCode').val("");
                    $('#newspecification').val("");
                    $('#newspecificationcode').val("");
                    $('#method').val("");
                    $('#unit').val("");
                    $('#turnAroundTime').val("");
                    $('#reformTestResult').val("");
                    $('#note').val("");
                    $('#specification').data("kendoComboBox").value("");
                    $('#AddTestInfo').data("kendoDialog").close();
                    var combobox = $("#specification").data("kendoComboBox");
                    combobox.select(function (dataItem) {
                        return dataItem.name === " ";
                    });
                    var notification = $("#notification").data("kendoNotification");
                    notification.show({
                        message: "Insert Successful"
                    }, "success");
                },
                error: function () {
                    var notification = $("#notification").data("kendoNotification");
                    notification.show({
                        title: "Wrong Save",
                        message: "Insert error"
                    }, "error");
                    var dialog = $('#AddTestInfo');
                    dialog.data("kendoDialog").open();
                }
            });
       
        return false;
    }
    function onChangSpec(e) {
        $('#newspecification').val("");
        $('#NewSpec').modal('hide');
        $('#NewSpec').css('display', 'none');       
        $('#newspecificationcode').val("");
        $('#NewSpecCode').modal('hide');
        $('#NewSpecCode').css('display', 'none');      
        $('#method').focus();
    }
    function onSelectSpec() { }
    function openCreateSpec() {
        $("#NewSpec").toggle();
        $("#newspecification").focus()
        $("#NewSpecCode").toggle();
       
    }
</script>