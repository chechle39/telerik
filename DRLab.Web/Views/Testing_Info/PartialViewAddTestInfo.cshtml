@*@(Html.Kendo().Grid<DRLab.Data.ViewModels.E08T_Testing_InfoViewModel1>()
        .Name("Testing_combobox")
        .Columns(columns =>
        {
            columns.Bound(p => p.analysisCode).Hidden();
            columns.ForeignKey(p => p.specification, (System.Collections.IEnumerable)ViewData["categories"], "specification", "specification").EditorTemplateName("ValueView").Hidden();
            columns.Bound(p => p.newspecification).Width(400).Hidden();
            columns.Bound(p => p.method).Width(400).Hidden();
            columns.Bound(p => p.unit).Hidden();
            columns.Bound(p => p.turnAroundTime).Hidden();
            columns.Bound(p => p.reformTestResult).Hidden();
            columns.Bound(p => p.note).Hidden();
            columns.Command(command => command.Edit().UpdateText("Insert")).Hidden();
        })
        .ToolBar(toolbar => toolbar.Create().Text(" "))
        .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Title("New Testing Info")))
        .DataSource(dataSource => dataSource
            .Ajax()
             // .Events(events => events.Error("error_handler"))
             .Model(model => model.Id(p => p.analysisCode))
             .Model(model => model.Field(p => p.specification))
            .Model(model => model.Field(p => p.newspecification))
            .Model(model => model.Field(p => p.method))
            .Model(model => model.Field(p => p.unit))
            .Model(model => model.Field(p => p.turnAroundTime))
            .Model(model => model.Field(p => p.reformTestResult))
            .Model(model => model.Field(p => p.note))
            .Create(read => read.Action("Create_TestingInfoRequest", "Testing_Info"))
            .Read(read => read.Action("Read_Testing_Info", "Testing_Info"))
        )
    )
        <script type="text/javascript">
            function error_handler(e) {
                if (e.errors) {
                    var message = "Errors:\n";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    alert(message);
                }
            }
        </script>
        <style>
            .k-header.k-grid-toolbar {
                border: 0;
                background: none;
            }

            .k-grid-toolbar {
                width: 60px;
                border: 0;
                background: none;
            }

            .k-grid.k-widget.k-grid-display-block.k-editable {
                border: 0;
            }

            label:not(.form-check-label):not(.custom-file-label) {
                font-weight: 400;
                text-align: left;
            }
            .editor-label {
                text-align:left!important;
            }
        </style>*@

    @model string
    <kendo-dialog name="@Model" title="New Testing" width="500" modal="true" visible="false">
        <content>
            <form asp-controller="Testing_Info" asp-action="TestingInfo_CreatePopup" id="createTesting_InfoForm" method="post">
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Analysis Code</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().TextBox()
                    .Name("analysisCode")
                    .HtmlAttributes(new { placeholder = "AnalysisCode", required = "required", style = "width: 100%" }))
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Specification</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().ComboBox()
                                .Name("specification")
                                .Placeholder("Select specification")
                                .DataTextField("specification")
                                .DataValueField("specification")
                                .HtmlAttributes(new { style = "width: 100%;margin-top: -4px;" })
                                .Events(e =>
                                {
                                    e.Change("onChangecustomer").Select("onSelectcustomer");
                                })
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetspecificationItem", "Testing_Info");
                                    }).ServerFiltering(true);
                                })
                                .Filter("startswith")
                                .Height(300)
                                .HeaderTemplate("<div class=\"dropdown-header k-widget k-header\">" +
                                    "<span>Specification</span>" +
                                        "</div>")
                                .Template(
                                "<span class=\"k-state-default\"><h6>#: data.specification #</h6></span>")
                            ).

                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">New Specification</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Create new a Specification", style = "width: 100%" })
                    .Name("newspecification")
                    )
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Method</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Method", style = "width: 100%" })
                    .Name("method")
                    )
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Unit</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Unit", style = "width: 100%" })
                    .Name("unit")
                    )
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Turn Around Time</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Turn Around Time", style = "width: 100%" })
                    .Name("turnAroundTime")
                    )
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Reform Test Result</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().CheckBox().Name("reformTestResult").Checked(true))
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-3">
                        <span style="vertical-align: sub;">Note</span>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().TextBox()
                    .HtmlAttributes(new { placeholder = "Note", style = "width: 100%" })
                    .Name("note")
                    )
                    </div>
                </div>
            </form>
        </content>
        <actions>
            <action text="Cancel">
            </action>
            <action text="Save" title="Save" action="onSavetesting" primary="true">
            </action>
        </actions>
        <popup-animation>
            <open duration="500" effects="fade:in" />
            <close duration="500" effects="fade:out" />
        </popup-animation>
    </kendo-dialog>
    <script>
        function onSavetesting() {
            var analysisCode = $('#analysisCode').val();
            var specification = $('#specification').val();
            var newspecification = $('#newspecification').val();
            var method = $('#method').val();
            var unit = $('#unit').val();
            var turnAroundTime = $('#turnAroundTime').val();
            var reformTestResult = $('#reformTestResult').val();
            var note = $('#note').val();
            const requestUrl = "/Testing_Info/TestingInfo_CreatePopup";
            const data = {
                analysisCode: analysisCode,
                specification: specification,
                newspecification: newspecification,
                method: method,
                unit: unit,
                turnAroundTime: turnAroundTime,
                reformTestResult: reformTestResult,
                note: note,
            };
            if ((analysisCode != null && specification != null) && (analysisCode != '' && specification != '')) {
                $.post({
                    url: requestUrl,
                    data: data,
                    dataType: 'json',
                    success: function (result) {
                        $('#analysisCode').val("");
                        $('#method').val("");
                        $('#unit').val("");
                        $('#turnAroundTime').val("");
                        $('#reformTestResult').val("");
                        $('#note').val("");
                        $('#AddTestInfo').data("kendoDialog").close();
                        var combobox = $("#specification").data("kendoComboBox");
                        combobox.select(function (dataItem) {
                            return dataItem.name === " ";
                        });
                        var notification = $("#notification").data("kendoNotification");
                        notification.show({
                            message: "Insert Successful"
                        }, "success");
                    },
                    error: function () {
                        var notification = $("#notification").data("kendoNotification");
                        notification.show({
                            title: "Wrong Save",
                            message: "Uppdate error"
                        }, "error");
                        var dialog = $('#AddTestInfo');
                        dialog.data("kendoDialog").open();
                    }
                });
            } else {
                var notification = $("#notification").data("kendoNotification");
                notification.show({
                    title: "Wrong Save",
                    message: "Please enter AnalysisCode or Specification"
                }, "error");
            }
        
            return false;
        }
    </script>