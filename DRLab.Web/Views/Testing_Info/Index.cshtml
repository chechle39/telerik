@(Html.Kendo().Grid<DRLab.Data.ViewModels.E08T_Testing_InfoViewModel>()
    .Name("Testing_Info")
    .Columns(columns =>
    {
        //columns.ForeignKey(p => p.specification, (System.Collections.IEnumerable)ViewData["categories"], "specID", "specification").EditorTemplateName("PopulateCategories1")
        //.Title("Specification").Width(300);
        columns.Bound(p => p.analysisCode).Hidden();
        columns.Bound(p => p.specification).Width(330);
        columns.Bound(p => p.specCode).Filterable(false).Width(100);
        columns.Bound(p => p.unit).Filterable(false).Width(90);
        columns.Bound(p => p.method).Width(330);
        columns.Bound(p => p.turnAroundTime).Filterable(false).Width(50).Title("TAT").HtmlAttributes(new { @style = "text-align:center; vertical-align:middle" });
        columns.Bound(p => p.reformTestResult).Width(50).Title("Reform").ClientTemplate("<input type='checkbox' #= reformTestResult ? checked='checked' :'' # />").Filterable(false).HtmlAttributes(new { @style = "text-align:center; vertical-align:middle" });
        columns.Bound(p => p.note).Filterable(false).Width(200);
        columns.Command(command => { command.Custom("Delete").Click("openWindow").IconClass("k-icon k-i-trash").Text("Delete"); }).Width(80);
    })
    .ToolBar(toolbar =>
    {

        toolbar.Create();
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false))
    .Pageable()
    .Navigatable()
    .Sortable()
    .Filterable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(25)
        .ServerOperation(false)
        .Events(events => { events.Error("error_handler"); events.RequestEnd("onRequestEnd");})
        .Model(model =>
        {
            model.Id(p => p.analysisCode);
            model.Field(p => p.analysisCode);
            model.Field(p => p.specification);
            model.Field(p => p.specCode);
            model.Field(p => p.method);
            model.Field(p => p.unit);
            model.Field(p => p.turnAroundTime);
            model.Field(p => p.reformTestResult);
            model.Field(p => p.note);
        })
        .Create(read => read.Action("TestingInfo_Create", "Testing_Info"))
        .Read(read => read.Action("Read_Testing_Info", "Testing_Info"))
        .Update(read => read.Action("TestingInfo_Update", "Testing_Info"))
        .Destroy(read => read.Action("TestingInfo_Destroy", "Testing_Info"))
    )
)
    <div id="modalWindow" style="display:none">
        <h2 style="font-size:14px">Are you sure you want to delete this record?</h2>
        <button id="yes" class="k-button">Yes</button>
        <button id="no" class="k-button">No</button>
    </div>
@(Html.Kendo().Notification()
    .Name("noti")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
    })
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    function openWindow(e) {
        wnd = $("#modalWindow").kendoWindow({
            title: "Delete confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");
        e.preventDefault();

        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        wnd.center().open();

        $("#yes").click(function () {
            grid.removeRow(row);
            wnd.close();
        });

        $("#no").click(function () {
            wnd.close();
        });
    }
    function onRequestEnd(e) {
        //Check request type
        if (e.type == "create") {
            //check for errors in the response
            if (e.response != null || e.response.Errors == null) {
                var notification = $("#noti").data("kendoNotification");
                notification.show({
                    message: "Insert Successful"
                }, "success");
            //} if (e.response.Errors != null) {
            //    var notification = $("#notification").data("kendoNotification");
            //    notification.show({
            //        title: "Wrong Save",
            //        message: "Insert error"
            //    }, "error");
            }
        }
        if (e.type == "update") {
            //check for errors in the response
            if (e.response != null || e.response.Errors == null) {
                var notification = $("#noti").data("kendoNotification");
                notification.show({
                    message: "Update Successful"
                }, "success");
                //} if (e.response.Errors != null) {
                //    var notification = $("#notification").data("kendoNotification");
                //    notification.show({
                //        title: "Wrong Save",
                //        message: "Insert error"
                //    }, "error");
            }
        }
    }
</script>
<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong-pass">
        <img src="@Url.Content("~/Shared/error-icon.png")" />
        <h3>#= title #</h3>
        <p>#= message #</p>
    </div>
</script>
<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="@Url.Content("~/Shared/success-icon.png")" />
        <h3>#= message #</h3>
    </div>
</script>
<script id="delete-confirmation" type="text/x-kendo-template">
    <p class="delete-message">Are you sure you want to delete this record?</p>
</script>
<style>
    .k-window-title k-dialog-title::before {
        content: 'Confirmation' !important;
    }

    .k-grid tr .checkbox-align {
        text-align: center;
        vertical-align: middle;
    }

    .k-grid-content {
        height: auto !important;
    }

    .k-grid tbody tr {
        line-height: 14px !important;
    }

    .btn-raised {
        background-color: #92d050 !important;
        color: #fff !important;
        border-color: #92d050;
    }

    .k-grid tbody .k-button {
        min-width: 0px !important;
        height: 20px;
    }

    div.k-window {
        min-width: 15% !important;
    }

    .k-notification h3 {
        padding: 30px 10px 5px;
        font-size: 1em;
        line-height: normal;
    }

    .k-notification img {
        margin: 20px;
        float: left;
    }


    /* Info template */
    .new-mail {
        width: 300px;
        height: 100px;
    }

    /* Error template */
    .wrong-pass {
        width: 300px;
        height: 100px;
    }

    /* Success template */
    .upload-success {
        width: 300px;
        height: 50px;
    }


    /* For Bootstrap v4 theme */
    .k-bootstrap-v4 .k-notification h3 {
        padding: 10px 10px 5px;
    }

    .k-bootstrap-v4 .k-notification img {
        margin: 10px 20px 0 0;
    }

    .k-bootstrap-v4 .new-mail,
    .k-bootstrap-v4 .wrong-pass,
    .k-bootstrap-v4 .upload-success {
        width: calc( 300px - 2.5rem );
        height: calc( 100px - 1.5rem );
    }


    /* For Material v2 theme */
    .k-material-v2 .k-notification h3 {
        padding: 10px 10px 5px;
    }

    .k-material-v2 .k-notification img {
        margin: 10px 20px 0 0;
    }

    .form-group {
        margin-bottom: 8px !important;
    }

    .k-material-v2 .new-mail,
    .k-material-v2 .wrong-pass,
    .k-material-v2 .upload-success {
        width: 270px;
        height: 70px;
    }

    .k-dropdown .k-dropdown-wrap {
        color: black !important;
        background-color: white !important;
        background-image: none !important;
    }
</style>